import { UtPcaContProdId } from './UtPcaContProdId';
import { UtPcaRbtProdPriceSourceId } from './UtPcaRbtProdPriceSourceId';
import { UtPcaRbtProdPriceTimingId } from './UtPcaRbtProdPriceTimingId';
import { UtPcaRbtProdPriceTypeId } from './UtPcaRbtProdPriceTypeId';
import { UtPcaCalcId } from './UtPcaCalcId';
import { UtPcaRbtProdDefnId } from './UtPcaRbtProdDefnId';
export class UtPcaRbtProdId {
	rbtProdId?: number;
	contProdId?: number;
	deletedFlag?: string;
	rbtProdName?: string;
	rbtProdPriceSourceId?: number;
	rbtProdPriceTypeId?: number;
	rbtProdPriceTimingId?: number;
	rbtProdNote?: string;
	catagoryFilterType?: string;
	catagoryFilterIdlist?: string;
	positionViolation?: number;
	rbtProdPriceDiscount?: number;
	inEligRuleId?: number;
	rbtProdRateType?: number;
	rbtProdCreateDate?: string;
	rbtProdUpdateDate?: string;
	excludeUtlzFlag?: number;
	clinicalEditEval?: boolean;
	positionVioGrpId?: number;
	positionVioGrpUsage: boolean;
	rbtProdTypeId: number;
	lastChangeUser?: string;
	lastChangeDate?: string;
	contProd?: UtPcaContProdId;
	rbtProdPriceSource?: UtPcaRbtProdPriceSourceId;
	rbtProdPriceTiming?: UtPcaRbtProdPriceTimingId;
	rbtProdPriceType?: UtPcaRbtProdPriceTypeId;
	utPcaCalcId?: Array<UtPcaCalcId>;
	utPcaRbtProdDefnId?: Array<UtPcaRbtProdDefnId>;
	constructor(obj: any = {}) {
		this.rbtProdId = obj.rbtProdId;
		this.contProdId = obj.contProdId;
		this.deletedFlag = obj.deletedFlag;
		this.rbtProdName = obj.rbtProdName;
		this.rbtProdPriceSourceId = obj.rbtProdPriceSourceId;
		this.rbtProdPriceTypeId = obj.rbtProdPriceTypeId;
		this.rbtProdPriceTimingId = obj.rbtProdPriceTimingId;
		this.rbtProdNote = obj.rbtProdNote;
		this.catagoryFilterType = obj.catagoryFilterType;
		this.catagoryFilterIdlist = obj.catagoryFilterIdlist;
		this.positionViolation = obj.positionViolation;
		this.rbtProdPriceDiscount = obj.rbtProdPriceDiscount;
		this.inEligRuleId = obj.inEligRuleId;
		this.rbtProdRateType = obj.rbtProdRateType;
		this.rbtProdCreateDate = obj.rbtProdCreateDate;
		this.rbtProdUpdateDate = obj.rbtProdUpdateDate;
		this.excludeUtlzFlag = obj.excludeUtlzFlag;
		this.clinicalEditEval = obj.clinicalEditEval;
		this.positionVioGrpId = obj.positionVioGrpId;
		this.positionVioGrpUsage = obj.positionVioGrpUsage;
		this.rbtProdTypeId = obj.rbtProdTypeId;
		this.lastChangeUser = obj.lastChangeUser;
		this.lastChangeDate = obj.lastChangeDate;
		this.contProd = new UtPcaContProdId(obj.contProd);
		this.rbtProdPriceSource = new UtPcaRbtProdPriceSourceId(obj.rbtProdPriceSource);
		this.rbtProdPriceTiming = new UtPcaRbtProdPriceTimingId(obj.rbtProdPriceTiming);
		this.rbtProdPriceType = new UtPcaRbtProdPriceTypeId(obj.rbtProdPriceType);
		this.utPcaCalcId = obj.utPcaCalcId.map(o => new UtPcaCalcId(o));
		this.utPcaRbtProdDefnId = obj.utPcaRbtProdDefnId.map(o => new UtPcaRbtProdDefnId(o));
	}
}
